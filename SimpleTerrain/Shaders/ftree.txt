#version 450
#extension GL_ARB_bindless_texture : require
layout(bindless_sampler) uniform sampler2D tex_diffuse;
layout(bindless_sampler) uniform sampler2D tex_specular;

out vec4 outcol;
in vec2 texc;
in vec3 normals;
in vec3 fragpos;

struct LightProperties
{
	vec3 lightpos;
	vec3 lightcolor;
};

uniform LightProperties light1;
uniform vec3 camerapos;

void main()
{
	vec3 totalcol;
	vec3 viewdir=normalize((camerapos-fragpos));
	
	if(texture(tex_diffuse,texc).w<0.1)
	discard;
	
	vec3 diffuse=texture(tex_diffuse,texc).xyz*light1.lightcolor;
	vec3 ambient=diffuse*0.05;
	vec3 specular=texture(tex_specular,texc).xyz*light1.lightcolor;
	
	vec3 lightdir=normalize((light1.lightpos));
	float cosT=dot(normals,lightdir);
	cosT=clamp(cosT,0.0,1.0);

	vec3 midvec=normalize(lightdir+viewdir);
	float specularcompo=pow(max(dot(midvec,normals),0.0),64.0f);

	specular=specular*specularcompo;

	totalcol=ambient+diffuse*cosT+specular;
	
	outcol=vec4(totalcol,1.0);
	
}